#DEPS(mk.deps) ljson(cache): unselect

PACKAGE_NAME = ljson

include $(ENV_MAKE_DIR)/inc.env.mk

VERSION         := 1.7.15
SRC_DIRNAME     := $(PACKAGE_NAME)
DOWNLOAD_NAME   := $(PACKAGE_NAME)
SRC_URL         := https://github.com/lengjingzju/json.git
FETCH_SCRIPT    := $(ENV_TOOL_DIR)/fetch_package.sh
INSTALL_PATH    := $(OUT_PATH)/image
MAKEFILE_PATH   := $(shell pwd)/patch/Makefile


CACHE_CHECKSUM  = $(shell pwd)/mk.deps $(MAKEFILE_PATH)
CACHE_DEPENDS   = none
CACHE_URL       = [git]$(SRC_URL)

MAKES           := make -s $(ENV_BUILD_JOBS) ENV_INS_ROOT=$(INSTALL_PATH) OUT_PATH=$(OUT_PATH)/objects -C $(OUT_PATH)/$(SRC_DIRNAME)

define do_compile
	$(FETCH_SCRIPT) git $(SRC_URL) $(DOWNLOAD_NAME) $(OUT_PATH) $(SRC_DIRNAME) && \
	cp -f $(MAKEFILE_PATH) $(OUT_PATH)/$(SRC_DIRNAME) && \
	rm -rf $(INSTALL_PATH) && $(MAKES) && $(MAKES) install
endef

.PHONY: all srcbuild clean install

all: cachebuild

include $(ENV_MAKE_DIR)/inc.cache.mk

srcbuild:
	@$(call do_compile)
	@echo "Build $(PACKAGE_NAME) Done."

clean:
	@rm -rf $(OUT_PATH)
	@echo "Clean $(PACKAGE_NAME) Done."

install:
	@install -d $(ENV_INS_ROOT)
	@$(call safecp,-rfp,$(INSTALL_PATH)/* $(ENV_INS_ROOT))
